<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lessspring.org.repository.ConfigInfoMapper">

    <resultMap type="com.lessspring.org.db.dto.ConfigInfoDTO" id="ConfigInfoDTO">
        <id column="id" property="id"/>
        <result column="data_id" property="dataId"/>
        <result column="group_id" property="groupId"/>
        <result column="namespace_id" property="namespaceId"/>
        <result column="content" property="content"/>
        <result column="config_type" property="type"/>
        <result column="create_time" property="createTime"/>
        <result column="encryption" property="encryption"/>
        <result column="file_source" property="fileSource"/>
    </resultMap>

    <resultMap type="com.lessspring.org.db.dto.ConfigBetaInfoDTO" id="ConfigBetaInfoDTO">
        <id column="id" property="id"/>
        <result column="data_id" property="dataId"/>
        <result column="group_id" property="groupId"/>
        <result column="namespace_id" property="namespaceId"/>
        <result column="content" property="content"/>
        <result column="config_type" property="type"/>
        <result column="create_time" property="createTime"/>
        <result column="encryption" property="encryption"/>
        <result column="file_source" property="fileSource"/>
        <result column="client_ips" property="clientIps"/>
    </resultMap>

    <!--  save config-infog  -->
    <insert id="saveConfigInfo" useGeneratedKeys="true" keyProperty="id" keyColumn="id"
            parameterType="com.lessspring.org.db.dto.ConfigInfoDTO">
        INSERT INTO config_info(id, data_id, group_id, namespace_id, content, config_type, encryption, create_time)
        VALUES (
        #{dto.id},
        #{dto.dataId},
        #{dto.groupId},
        #{dto.namespaceId},
        #{dto.content},
        #{dto.type},
        #{dto.encryption},
        #{dto.createTime});
    </insert>

    <!--  save config-info-beta  -->
    <insert id="saveConfigBetaInfo">
        INSERT INTO config_info_beta(id, data_id, group_id, namespace_id, content,
        config_type, encryption, client_ips)
        VALUES (
        #{dto.id},
        #{dto.dataId},
        #{dto.groupId},
        #{dto.namespaceId},
        #{dto.content},
        #{dto.type}),
        #{dto.encryption},
        #{dto.clientIps};
    </insert>

    <!--  update config-info  -->
    <update id="updateConfigInfo">
        UPDATE config_info SET
        <if test="dto.content != null and dto.content != ''">
            content = #{dto.content}
        </if>
        <if test="dto.type != null and dto.type != ''">
            config_type = #{dto.type}
        </if>
        <if test="dto.encryption != null and dto.encryption != ''">
            encryption = #{dto.encryption}
        </if>
        1 = 1
        WHERE namespace_id = #{dto.namespaceId} and group_id = #{dto.groupId} and data_id = #{dto.dataId} LIMIT 1
    </update>

    <!--  update config-info-beta  -->
    <update id="updateConfigBetaInfo">
        UPDATE config_info_beta SET
        <if test="dto.content != null and dto.content != ''">
            content = #{dto.content}
        </if>
        <if test="dto.type != null and dto.type != ''">
            config_type = #{dto.type}
        </if>
        <if test="dto.clientIps != null and dto.clientIps != ''">
            client_ips = #{dto.clientIps}
        </if>
        <if test="dto.encryption != null and dto.encryption != ''">
            encryption = #{dto.encryption}
        </if>
        1 = 1
        WHERE namespace_id = #{dto.namespaceId} and group_id = #{dto.groupId} and data_id = #{dto.dataId} LIMIT 1
    </update>

    <delete id="removeConfigInfo">
        DELETE from config_info where namespace_id = #{dto.namespaceId} and group_id = #{dto.groupId} and data_id = #{dto.dataId} LIMIT 1
    </delete>

    <delete id="removeConfigBetaInfo">
        DELETE from config_info_beta where namespace_id = #{dto.namespaceId} and group_id = #{dto.groupId} and data_id = #{dto.dataId} LIMIT 1
    </delete>

    <!--  find config-content by QueryConfigInfo  -->
    <select id="findConfigInfoContent"
            parameterType="com.lessspring.org.pojo.query.QueryConfigInfo"
            resultType="java.lang.String">
        SELECT content
        FROM config_info
        WHERE namespace_id = #{query.namespaceId}
        and group_id = #{query.groupId}
        and data_id = #{query.dataId}
    </select>

    <!--  find config by QueryConfigInfo  -->
    <select id="findConfigInfo"
            parameterType="com.lessspring.org.pojo.query.QueryConfigInfo"
            resultMap="ConfigInfoDTO">
        SELECT *
        FROM config_info
        WHERE namespace_id = #{query.namespaceId}
        and group_id = #{query.groupId}
        and data_id = #{query.dataId} limit 1
    </select>

    <!--  find min and max id from config-info  -->
    <select id="findMinAndMaxId" resultType="java.lang.Long">
        SELECT MIN(id), MAX(id)
        FROM config_info
    </select>

    <!--  batch find config-info  -->
    <select id="batchFindConfigInfo" resultType="com.lessspring.org.db.dto.ConfigInfoDTO">
        SELECT * FROM config_info WHERE id in
        <foreach collection="ids" index="id" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <!--  find min and max id from config-beta-info  -->
    <select id="findMinAndMaxId4Beta" resultType="java.lang.Long">
        SELECT MIN(id), MAX(id)
        FROM config_info_beta
    </select>

    <!--  batch find config-beta-info  -->
    <select id="batchFindConfigInfo4Beta"
            resultType="com.lessspring.org.db.dto.ConfigBetaInfoDTO">
        SELECT * FROM config_info_beta WHERE id in
        <foreach collection="ids" index="id" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <!--  query config-beta-info  -->
    <select id="findConfigBetaInfo"
            resultMap="ConfigBetaInfoDTO">
        SELECT *
        FROM config_info_beta
        WHERE namespace_id = #{query.namespaceId}
        and group_id like CONCAT('%', #{query.groupId}, '%')
        and data_id like CONCAT('%', #{query.dataId}, '%')
    </select>

</mapper>